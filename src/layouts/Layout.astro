---
import { ViewTransitions } from 'astro:transitions';
import { getCollection, getEntry } from 'astro:content';
import Dwane from '../components/Dwane.astro';

interface Props {
	title: string;
}

let slug = Astro.params.slug;
console.log("slug layout: ", slug);

console.log("Astro.url: ", Astro.url.pathname);
if (Astro.url.pathname.includes('shop')){
	slug = "shop";
}

console.log("slug again: ", slug);
const { title } = Astro.props;


const allStarters = await getCollection('starter');
// console.log("allStarters: ", allStarters);

---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body>
		{slug && <a href="./">home</a>}
		<label for="starter-select">Clone this:</label>

		<select name="pages" id="starter-select">
			<option value="">--Please choose an option--</option>
			{allStarters.map(starterEntry => (
				<option value=`/${starterEntry.slug}` selected={starterEntry.slug === slug} >{starterEntry.data.name}</option>
			))}
		</select>
		{slug !== "shop" && <a href="./shop">shop</a>}
		<slot />
		<Dwane mode=`${slug ? slug : "main"}` />
	</body>
</html>

<script>
	import { navigate } from 'astro:transitions/client';
	window.astroNavigate = navigate;
</script>

<script is:inline data-astro-rerun>
	document.addEventListener('astro:page-load', () => {
    // This only runs once.
    // setupStuff();
		console.log("astro:page-load");
			const selectEl = document.querySelector("#starter-select");
			console.log("selectEl: ", selectEl);
			selectEl.addEventListener("change", (e)=> {
				console.log("selectEl.value: ", selectEl.value);
				// location.href= selectEl.value;
				window.astroNavigate(selectEl.value);
			});

	}, { once: true });


</script>



<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: system-ui, sans-serif;
		background: #13151a;
		background-size: 224px;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
</style>
